// Code generated by protoc-gen-go.
// source: vtctldata.proto
// DO NOT EDIT!

/*
Package vtctldata is a generated protocol buffer package.

It is generated from these files:
	vtctldata.proto

It has these top-level messages:
	ExecuteVtctlCommandRequest
	ExecuteVtctlCommandResponse
*/
package vtctldata

import proto "github.com/golang/protobuf/proto"
import logutil "github.com/youtube/vitess/go/vt/proto/logutil"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

// ExecuteVtctlCommandRequest is the payload for ExecuteVtctlCommand.
// timeouts are in nanoseconds.
type ExecuteVtctlCommandRequest struct {
	Args          []string `protobuf:"bytes,1,rep,name=args" json:"args,omitempty"`
	ActionTimeout int64    `protobuf:"varint,2,opt,name=action_timeout" json:"action_timeout,omitempty"`
	LockTimeout   int64    `protobuf:"varint,3,opt,name=lock_timeout" json:"lock_timeout,omitempty"`
}

func (m *ExecuteVtctlCommandRequest) Reset()         { *m = ExecuteVtctlCommandRequest{} }
func (m *ExecuteVtctlCommandRequest) String() string { return proto.CompactTextString(m) }
func (*ExecuteVtctlCommandRequest) ProtoMessage()    {}

// ExecuteVtctlCommandResponse is streamed back by ExecuteVtctlCommand.
type ExecuteVtctlCommandResponse struct {
	Event *logutil.Event `protobuf:"bytes,1,opt,name=event" json:"event,omitempty"`
}

func (m *ExecuteVtctlCommandResponse) Reset()         { *m = ExecuteVtctlCommandResponse{} }
func (m *ExecuteVtctlCommandResponse) String() string { return proto.CompactTextString(m) }
func (*ExecuteVtctlCommandResponse) ProtoMessage()    {}

func (m *ExecuteVtctlCommandResponse) GetEvent() *logutil.Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func init() {
}
