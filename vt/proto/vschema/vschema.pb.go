// Code generated by protoc-gen-go.
// source: vschema.proto
// DO NOT EDIT!

/*
Package vschema is a generated protocol buffer package.

It is generated from these files:
	vschema.proto

It has these top-level messages:
	Keyspace
	Vindex
	Table
	ColVindex
	Autoinc
*/
package vschema

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

// Keyspace is the vschema for a keyspace.
type Keyspace struct {
	Sharded  bool               `protobuf:"varint,1,opt,name=sharded" json:"sharded,omitempty"`
	Vindexes map[string]*Vindex `protobuf:"bytes,2,rep,name=vindexes" json:"vindexes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Tables   map[string]*Table  `protobuf:"bytes,3,rep,name=tables" json:"tables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Keyspace) Reset()                    { *m = Keyspace{} }
func (m *Keyspace) String() string            { return proto.CompactTextString(m) }
func (*Keyspace) ProtoMessage()               {}
func (*Keyspace) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Keyspace) GetVindexes() map[string]*Vindex {
	if m != nil {
		return m.Vindexes
	}
	return nil
}

func (m *Keyspace) GetTables() map[string]*Table {
	if m != nil {
		return m.Tables
	}
	return nil
}

// Vindex is the vindex info for a Keyspace.
type Vindex struct {
	Type   string            `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Params map[string]string `protobuf:"bytes,2,rep,name=params" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Owner  string            `protobuf:"bytes,3,opt,name=owner" json:"owner,omitempty"`
}

func (m *Vindex) Reset()                    { *m = Vindex{} }
func (m *Vindex) String() string            { return proto.CompactTextString(m) }
func (*Vindex) ProtoMessage()               {}
func (*Vindex) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Vindex) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

// Table is the table info for a Keyspace.
type Table struct {
	Type        string       `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	ColVindexes []*ColVindex `protobuf:"bytes,2,rep,name=col_vindexes,json=colVindexes" json:"col_vindexes,omitempty"`
	Autoinc     *Autoinc     `protobuf:"bytes,3,opt,name=autoinc" json:"autoinc,omitempty"`
}

func (m *Table) Reset()                    { *m = Table{} }
func (m *Table) String() string            { return proto.CompactTextString(m) }
func (*Table) ProtoMessage()               {}
func (*Table) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Table) GetColVindexes() []*ColVindex {
	if m != nil {
		return m.ColVindexes
	}
	return nil
}

func (m *Table) GetAutoinc() *Autoinc {
	if m != nil {
		return m.Autoinc
	}
	return nil
}

// ColVindex is used to associate a column to a vindex.
type ColVindex struct {
	Col  string `protobuf:"bytes,1,opt,name=col" json:"col,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *ColVindex) Reset()                    { *m = ColVindex{} }
func (m *ColVindex) String() string            { return proto.CompactTextString(m) }
func (*ColVindex) ProtoMessage()               {}
func (*ColVindex) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// Autoinc is used to designate a column as auto-inc.
type Autoinc struct {
	Col      string `protobuf:"bytes,1,opt,name=col" json:"col,omitempty"`
	Sequence string `protobuf:"bytes,2,opt,name=sequence" json:"sequence,omitempty"`
}

func (m *Autoinc) Reset()                    { *m = Autoinc{} }
func (m *Autoinc) String() string            { return proto.CompactTextString(m) }
func (*Autoinc) ProtoMessage()               {}
func (*Autoinc) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*Keyspace)(nil), "vschema.Keyspace")
	proto.RegisterType((*Vindex)(nil), "vschema.Vindex")
	proto.RegisterType((*Table)(nil), "vschema.Table")
	proto.RegisterType((*ColVindex)(nil), "vschema.ColVindex")
	proto.RegisterType((*Autoinc)(nil), "vschema.Autoinc")
}

var fileDescriptor0 = []byte{
	// 365 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x92, 0xcd, 0x4a, 0xf3, 0x40,
	0x14, 0x86, 0x49, 0xfb, 0x35, 0x49, 0x4f, 0xbe, 0x6a, 0x19, 0xba, 0x28, 0x11, 0xb1, 0x04, 0x85,
	0xe2, 0x22, 0x60, 0x4b, 0xf1, 0x6f, 0x25, 0xe2, 0x42, 0x74, 0x21, 0x41, 0xdc, 0xca, 0x34, 0x1d,
	0x68, 0x31, 0xcd, 0xc4, 0x24, 0x8d, 0x66, 0xe3, 0xc5, 0x78, 0x07, 0xde, 0xa1, 0x93, 0xf9, 0x23,
	0xad, 0xd9, 0x9d, 0xd3, 0x39, 0xef, 0x33, 0x4f, 0xcf, 0x04, 0x7a, 0x45, 0x16, 0x2e, 0xc9, 0x1a,
	0xfb, 0x49, 0x4a, 0x73, 0x8a, 0x2c, 0xd9, 0x7a, 0x3f, 0x2d, 0xb0, 0x1f, 0x48, 0x99, 0x25, 0x38,
	0x24, 0x68, 0x08, 0x56, 0xb6, 0xc4, 0xe9, 0x82, 0x2c, 0x86, 0xc6, 0xc8, 0x18, 0xdb, 0x81, 0x6a,
	0xd1, 0x35, 0xd8, 0xc5, 0x2a, 0x5e, 0x90, 0x4f, 0x92, 0x0d, 0x5b, 0xa3, 0xf6, 0xd8, 0x99, 0x1c,
	0xf9, 0x8a, 0xa8, 0xe2, 0xfe, 0x8b, 0x9c, 0xb8, 0x8b, 0xf3, 0xb4, 0x0c, 0x74, 0x00, 0xcd, 0xc0,
	0xcc, 0xf1, 0x3c, 0x62, 0xd1, 0x36, 0x8f, 0x1e, 0xfe, 0x8d, 0x3e, 0xf3, 0x73, 0x11, 0x94, 0xc3,
	0xee, 0x23, 0xf4, 0xb6, 0x88, 0xa8, 0x0f, 0xed, 0x37, 0x52, 0x72, 0xb5, 0x6e, 0x50, 0x95, 0xe8,
	0x04, 0x3a, 0x05, 0x8e, 0x36, 0x84, 0x39, 0x19, 0x0c, 0xbc, 0xaf, 0xc1, 0x22, 0x18, 0x88, 0xd3,
	0xab, 0xd6, 0x85, 0xe1, 0xde, 0x83, 0x53, 0xbb, 0xa4, 0x81, 0x75, 0xbc, 0xcd, 0xda, 0xd3, 0x2c,
	0x1e, 0xab, 0xa1, 0xbc, 0x6f, 0x03, 0x4c, 0x71, 0x01, 0x42, 0xf0, 0x2f, 0x2f, 0x13, 0x22, 0x39,
	0xbc, 0x46, 0x53, 0x30, 0x13, 0x9c, 0xe2, 0xb5, 0xda, 0xd4, 0xc1, 0x8e, 0x95, 0xff, 0xc4, 0x4f,
	0xe5, 0x9f, 0x15, 0xa3, 0x68, 0x00, 0x1d, 0xfa, 0x11, 0x93, 0x94, 0xad, 0xa8, 0x22, 0x89, 0xc6,
	0xbd, 0x04, 0xa7, 0x36, 0xdc, 0x20, 0x3d, 0xa8, 0x4b, 0x77, 0xeb, 0x92, 0x5f, 0xd0, 0xe1, 0xe2,
	0x8d, 0x8a, 0x33, 0xf8, 0x1f, 0xd2, 0xe8, 0x75, 0xe7, 0x49, 0x91, 0x16, 0xbd, 0xa5, 0x91, 0xdc,
	0xa0, 0x13, 0xaa, 0x92, 0x3d, 0xe4, 0x29, 0x58, 0x78, 0x93, 0xd3, 0x55, 0x1c, 0x72, 0x4d, 0x67,
	0xd2, 0xd7, 0x89, 0x1b, 0xf1, 0x7b, 0xa0, 0x06, 0xbc, 0x33, 0xe8, 0x6a, 0x4a, 0x25, 0xce, 0x38,
	0x4a, 0x9c, 0x95, 0x95, 0x55, 0x8c, 0xd7, 0xca, 0x9b, 0xd7, 0xde, 0x39, 0x58, 0x12, 0xd3, 0x10,
	0x70, 0xc1, 0xce, 0xc8, 0xfb, 0x86, 0xc4, 0xa1, 0x0a, 0xe9, 0x7e, 0x6e, 0xf2, 0x8f, 0x7a, 0xfa,
	0x1b, 0x00, 0x00, 0xff, 0xff, 0xbe, 0x16, 0x53, 0xe5, 0xe5, 0x02, 0x00, 0x00,
}
