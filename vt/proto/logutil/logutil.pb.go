// Code generated by protoc-gen-go.
// source: logutil.proto
// DO NOT EDIT!

/*
Package logutil is a generated protocol buffer package.

It is generated from these files:
	logutil.proto

It has these top-level messages:
	Time
	Event
*/
package logutil

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Level is the level of the log messages.
type Level int32

const (
	// The usual logging levels.
	// Should be logged using logging facility.
	Level_INFO    Level = 0
	Level_WARNING Level = 1
	Level_ERROR   Level = 2
	// For messages that may contains non-logging events.
	// Should be logged to console directly.
	Level_CONSOLE Level = 3
)

var Level_name = map[int32]string{
	0: "INFO",
	1: "WARNING",
	2: "ERROR",
	3: "CONSOLE",
}
var Level_value = map[string]int32{
	"INFO":    0,
	"WARNING": 1,
	"ERROR":   2,
	"CONSOLE": 3,
}

func (x Level) String() string {
	return proto.EnumName(Level_name, int32(x))
}

// Time represents a time stamp in nanoseconds. In go, use logutil library
// to convert times.
type Time struct {
	Seconds     int64 `protobuf:"varint,1,opt,name=seconds" json:"seconds,omitempty"`
	Nanoseconds int32 `protobuf:"varint,2,opt,name=nanoseconds" json:"nanoseconds,omitempty"`
}

func (m *Time) Reset()         { *m = Time{} }
func (m *Time) String() string { return proto.CompactTextString(m) }
func (*Time) ProtoMessage()    {}

// Event is a single logging event
type Event struct {
	Time  *Time  `protobuf:"bytes,1,opt,name=time" json:"time,omitempty"`
	Level Level  `protobuf:"varint,2,opt,name=level,enum=logutil.Level" json:"level,omitempty"`
	File  string `protobuf:"bytes,3,opt,name=file" json:"file,omitempty"`
	Line  int64  `protobuf:"varint,4,opt,name=line" json:"line,omitempty"`
	Value string `protobuf:"bytes,5,opt,name=value" json:"value,omitempty"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}

func (m *Event) GetTime() *Time {
	if m != nil {
		return m.Time
	}
	return nil
}

func init() {
	proto.RegisterType((*Time)(nil), "logutil.Time")
	proto.RegisterType((*Event)(nil), "logutil.Event")
	proto.RegisterEnum("logutil.Level", Level_name, Level_value)
}
